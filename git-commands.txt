git config --list			mostra tutte le impostazioni di Git configurate a livello globale sul tuo sistema
git config --global --list
git config --system --list
git config --local --list
git config --get <nome_config>

----------------------------------------------------------------------------------------------------
La repository in remoto (su GitHub, GitLab, o un altro server Git) deve essere già creata sul sito.

git init								Inizializza una nuova repository Git in locale (crea la sottodir .git)
										Si parte da 0 ed è possibile solo lavorare in locale (git add, git commit).

git remote add origin "URL-remoto"		Collega la repo locale con una remota già esistente

git remote -v							


git clone "URL-remoto"					Copia completamente la repo remota, inclusi i file e la cronologia

----------------------------------------------------------------------------------------------------
git status


git add <file>...						aggiunge i file nella staging area

git commit -m "message"					commit dei file inseriti nella staging area

git commit -a -m "message"				Aggiunge automaticamente alla staging area tutti i file tracciati
										(cioè quelli che Git sta già monitorando) modificati o eliminati.
										Non include i file Untracked, che richiedono comunque git add.

git push


git fetch								only copies changes into your local Git repo,
										but doesn't copy changes from the remote repo
										directly into the working directory like pull

git pull

----------------------------------------------------------------------------------------------------
git log 								Mostra la cronologia dei commit del repo
git log --oneline						Fornisce una sola linea per commit, mostrando:
										- primi 7 caratteri del commit hash
										- commit message
git log --stat							


git reset "commithash"					Resetta la repo al commit specificato con "commithash"
										Mantiene le modifiche non ancora committate come modifiche locali
										e quindi si torna alla stato finale del commit.

git reset --hard "commithash"			Resetta la repo al commit specificato con "commithash",
										Senza mantenere le modifiche (effettua discard di tutte le modifiche)
										e quindi si torna allo stato iniziale del commit.


git revert "commithash"					Crea un nuovo commit che annulla le modifiche fatte nel commit specificato.
										A differenza di reset la cronologia non viene alterata.

----------------------------------------------------------------------------------------------------
git branch "nome-branch"				genera un branch alternativo in locale rispetto al branch master (main) 

git branch -a							per visualizzare tutti i branch in corso

git push --set-upstream origin "nome-branch"
Quando il branch locale non è ancora associato a un branch remoto,
Carica il branch locale sul repository remoto (origin) con lo stesso nome (branchName)

git checkout "nome-branch" 				switch repo's branch in local

git checkout -b "nome-branch"			generate and swith branch

git push								E' possibile pushare il lavoro solo nel branch ausiliare 
										senza ricongiungersi col main

git diff "nome-branch"					

git checkout main;
git merge "nome-branch"					Per combinare il lavoro del "nome-branch" con quello main, risolvendo
										eventuali conflitti.
										Si potrà vedere il "nome-branch" nel grafico.
										Potrà ancora essere utilizzato perchè non viene eliminato automaticamente.

In fase di eliminazione del branch se questo ha ancora delle modifiche che non sono state mergiate dal main
potrebbero perdersi. Quindi assicurati di effettuare prima la merge dal main con il branch ausiliare.

git branch -d "nome-branch"				per eliminare il branch solo in locale

git push --delete origin "nome-branch"  per eliminare il branch anche in remoto

----------------------------------------------------------------------------------------------------
git stash								Salva le modifiche tracked in un buffer, dove si conservano 
										i cambiamenti senza doverli pushare in remoto.
										I file Untracked non si possono inserire nello stash
git stash save "messaggio"				Salva le modifiche assegnandogli un nome

git stash list							restituisce un elenco delle tue istantanee salvate nel formato
										stash@{0}: "branch dove è stato fatto": MESSAGGIO

git stash show "NOME-STASH"
git stash show -p "NOME-STASH"

git stash apply "NOME-STASH"
git stash pop "NOME-STASH"

git stash drop "NOME-STASH"				Elimina dallo stash un salvataggio specificato.
git stash clear							Elimina dallo stash tutti i salvataggi.

----------------------------------------------------------------------------------------------------
ALTRO
git ls-files							elenca tutti i file che sono attualmente 
										tracciati nel tuo repository


git rm <file>...						rimuove i file e non c'è bisogno di fare git
										add, pronto per git commit


git mv <OldName_file> <NewName_file>	rinomina il file <OldName_file> e non c'è 
										bisogno di fare git add, pronto per git commit

